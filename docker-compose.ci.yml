version: '2.4'

# Contains a tests runner container that is used to run the full test suite for
# the service against the test containers from `docker-compose.test.yml`.

services:
  test-postgres:
    image: postgres:13.4
    healthcheck:
      test: pg_isready -h 127.0.0.1 -d test_db -U test_user
      interval: 5s
      start_period: 1s
    restart: always
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db

  # In CI use the image that was already built for running unit tests
  test-node-service-prototype:
    image: crystal-ball/node-service-prototype:prod
    healthcheck:
      # Slow down start period and back off interval for service container when
      # testing to minimize log noise from healthcheck endpoint
      start_period: 5s
      interval: 30s
    environment:
      SERVICE_HOST: '0.0.0.0'
      SERVICE_PORT: 9000
      POSTGRES_HOST: test-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DATABASE: test_db
    depends_on:
      test-postgres:
        condition: service_healthy

  tests-runner:
    image: crystal-ball/node-service-prototype:tests-runner
    volumes:
      - ./migrations:/opt/service/migrations
    environment:
      SERVICE_HOST: test-node-service-prototype
      SERVICE_PORT: 9000
      POSTGRES_HOST: test-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DATABASE: test_db
    depends_on:
      test-node-service-prototype:
        condition: service_healthy
